######################## PostgreSQL -- Start ########################
#DB connection
DB User:device_user
password:3asyso1

#Config Scripts
CREATE USER device_user WITH PASSWORD '3asyso1';
DROP DATABASE riskscoring;
CREATE DATABASE riskscoring ENCODING 'UTF-8';
GRANT ALL PRIVILEGES ON DATABASE "riskscoring" to device_user;
ALTER DATABASE riskscoring OWNER TO device_user;
################################################################

######################## Mongo -- Start ########################
### Mongo Commands
    db.createUser({user: "detectid",pwd: "3asyso1",roles: [ "readWrite", "dbAdmin" ]})
    mongoimport --drop -d digitalElement -c locations --type csv --file "IP-COUNTRY-REGION-CITY-LATITUDE-LONGITUDE-ISP.CSV" --headerline

### Fields: start_num,end_num,country,country-name,region,city,latitude,longitude,isp

### Create Index:
    db.locations.ensureIndex({field_name: 1})
################################################################

######################## CronJob Information ########################
You need to run the next set of commands in order to install a cron
job of risk scoring:

0) Create the folder

    sudo mkdir /opt/risk-scoring

        then create the file:

    sudo nano /opt/risk-scoring/cronJob-populationTask.sh

        add ownership to your user:

    sudo chown <your-user> /opt/risk-scoring/cronJob-populationTask.sh

        and finally make it executable:

    chmod u+x /opt/risk-scoring/cronJob-populationTask.sh

1) Execute the command: crontab -e
2) Add the next line (don't forget to hit enter to add a blank line after
our cronJob line):

0 0 1 * * /opt/risk-scoring/cronJob-populationTask.sh &> /tmp/risk-scoring.log

and then save the file and exit.

Explanation:
This cronJob will run every first day of the month at 12:00 a.m.
The output will go to the tmp file /tmp/risk-scoring.log

3) If you need to valid if the cronJob has been successfully installed
then run the command: crontab -l

Note: If you need to test if the cronJob is actually working, run
the command crontab -e and change the date of the Job to * * * * *
which execute the risk scoring's script every minute. E.g.:

* * * * * /opt/risk-scoring/cronJob-populationTask.sh &> /tmp/risk-scoring.log

################################################################
Running the application

1. mvn org.pitest:pitest-maven:mutationCoverage #(This Checks the quality of the tests)
2. mvn clean install # This compiles the project
3. Running the app (Two options)
  A. java -jar target/riskscoring-1.0.jar server riskscoring.yml  (Run the jar as server using the configuration from the yml)
  B. foreman start web -f Procfile.windows -e config/.env  #(loads the system using foreman)




